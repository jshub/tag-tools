<div class="highlight"><pre><span class="c">/*!</span>
<span class="c"> *  jsHub open source tag</span>
<span class="c"> *  Copyright (c) 2009 jsHub.org</span>
<span class="c"> *  Authors: Liam Clancy, Fiann O&#39;Hagan, Steve Heron</span>
<span class="c"> */</span>

<span class="p">(</span><span class="kd">function</span><span class="p">(){</span>

  <span class="c">// Wrap logging during development</span>
  <span class="kd">function</span> <span class="nx">log</span><span class="p">(){</span> 
    <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span> <span class="o">&amp;&amp;</span> <span class="nx">META</span><span class="p">.</span><span class="nx">DEBUG</span> <span class="o">===</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">console</span><span class="o">,</span> <span class="nx">arguments</span><span class="p">);</span> 
    <span class="p">}</span>
  <span class="p">};</span>
  
  <span class="c">// Constant representing the loader&#39;s metadata properties</span>
  <span class="kd">var</span> <span class="nx">META</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s2">&quot;DEBUG&quot;</span><span class="o">:</span> <span class="kc">false</span> <span class="c">// enable debugging and logging</span>
      <span class="p">};</span>

  <span class="c">// Create an Inspector instance from Global object</span>
  <span class="kd">var</span> <span class="nx">oInspector</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">JSHUB_ORG</span><span class="p">.</span><span class="nx">Inspector</span><span class="p">(</span><span class="s1">&#39;jshub_inspector&#39;</span><span class="o">,</span> <span class="p">{</span>
    <span class="nx">width</span><span class="o">:</span> <span class="s1">&#39;265px&#39;</span><span class="o">,</span>  <span class="c">// TODO: this should be dependent on state</span>
    <span class="c">//height: &#39;&#39;, // do not use as it breakes the resizing</span>
    <span class="nx">close</span><span class="o">:</span> <span class="kc">true</span><span class="o">,</span> <span class="c">// default true</span>
    <span class="nx">draggable</span><span class="o">:</span> <span class="kc">true</span><span class="o">,</span> <span class="c">// default true</span>
    <span class="nx">dragOnly</span><span class="o">:</span> <span class="kc">true</span><span class="o">,</span> <span class="c">// default false</span>
    <span class="nx">autofillheight</span><span class="o">:</span> <span class="s2">&quot;body&quot;</span><span class="o">,</span> <span class="c">// default body</span>
    <span class="nx">constraintoviewport</span><span class="o">:</span> <span class="kc">true</span><span class="o">,</span>
    <span class="nx">underlay</span><span class="o">:</span> <span class="s2">&quot;none&quot;</span><span class="o">,</span> <span class="c">//default none</span>
    <span class="nx">state</span><span class="o">:</span> <span class="mi">1</span><span class="o">,</span> <span class="c">// set state on creation (default 1)</span>
    <span class="nx">status</span><span class="o">:</span> <span class="s2">&quot;info&quot;</span> <span class="c">// set status on creation (default info)</span>
  <span class="p">});</span>
  
  
  <span class="c">// Enhancements to Inspector Events for this instance</span>
  <span class="c">/*</span>
<span class="c">  Inspector.beforeRenderEvent.subscribe(function() {</span>
<span class="c">    log(&#39;beforeRenderEvent called on instance&#39;);</span>
<span class="c">  })</span>
<span class="c">  </span>
<span class="c">  // Enhancements to Inspector Events</span>
<span class="c">  Inspector.renderEvent.subscribe(function() {</span>
<span class="c">    log(&#39;renderEvent called on instance&#39;);</span>
<span class="c">  })</span>
<span class="c">  */</span>
  
  <span class="c">// Public API</span>
  <span class="nb">window</span><span class="p">.</span><span class="nx">jsHub</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">jsHub</span> <span class="o">||</span> <span class="p">{};</span>
  <span class="nb">window</span><span class="p">.</span><span class="nx">jsHub</span><span class="p">.</span><span class="nx">Inspector</span> <span class="o">=</span> <span class="nx">oInspector</span><span class="o">;</span>  
  <span class="c">// Enable inspection of the instance</span>
  <span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Public instance: %o&quot;</span><span class="o">,</span> <span class="nb">window</span><span class="p">.</span><span class="nx">jsHub</span><span class="p">.</span><span class="nx">Inspector</span><span class="p">);</span>

<span class="p">})();</span>

<span class="c">// autmoatically show the Inspector</span>
<span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nb">window</span><span class="o">,</span> <span class="s1">&#39;load&#39;</span><span class="o">,</span> <span class="kd">function</span><span class="p">(){</span>
  <span class="nx">jsHub</span><span class="p">.</span><span class="nx">Inspector</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
<span class="p">});</span>
</pre></div>
