<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <title>Inspector</title>

    <!-- common styleguide styles -->
    <%= stylesheet_link_tag "styleguide/styleguide.css" %>
    <%= stylesheet_link_tag "styleguide/examples.css" %>
  
    <!-- YUI 3 basic grids -->
    <%= stylesheet_link_tag "inspector/yui3/reset-context.css" %>
    <%= stylesheet_link_tag "inspector/yui3/fonts-context.css" %>
    <%= stylesheet_link_tag "inspector/yui3/grids-context.css" %>
    <%= stylesheet_link_tag "inspector/yui3/base-context.css" %>
    
    <!-- YUI 2 Common -->
    <%= javascript_include_tag "inspector/yui2/utilities/utilities.js" %>
    <%= javascript_include_tag "inspector/yui2/dragdrop/dragdrop.js" %>
    
    <!-- YUI 2 Panel -->
    <%= stylesheet_link_tag "inspector/yui2/container/assets/skins/sam/container.css" %>
    <%= stylesheet_link_tag "inspector/yui2/resize/assets/skins/sam/resize.css" %>
    <%= javascript_include_tag "inspector/yui2/container/container.js" %>
    <%= javascript_include_tag "inspector/yui2/resize/resize.js" %>
    
    <!-- YUI 2 Accordion ref: http://www.i-marco.nl/weblog/yui-accordion/ -->
    <%= stylesheet_link_tag "inspector/accordionview/accordionview.css" %>
    <%= javascript_include_tag "inspector/accordionview/accordionview.js" %>
    
    <!-- jsHub Inspector -->
    <%= stylesheet_link_tag "inspector/inspector.css" %>
    <%= javascript_include_tag "inspector/inspector.js" %>

    <!-- jsHub Tag -->
    <%= javascript_include_tag "jquery/jquery-v1.2.6.js" %>
    <%= javascript_include_tag "jshub/jshub-gromit-r1-debug.js" %>
  
</head>
<body class="jshub yui-skin-sam">

<h1>Inspector</h1>
<p>Development of the Inspector for jsHub based on YUI 2 Library and accordion widget (<%= link_to 'docs', '../docs/' %>).</p>

<h2>Floating</h2>

<div id="example1" class="yui-cssreset yui-cssfonts yui-cssgrids yui-cssbase jshub inspector yui-skin-sam example-ui">
  <div id="inspector-floating" class="state1" >
    <div class="bd">
      <ul>
        <li class="status">jsHub</li>
      </ul>
    </div>
  </div>
</div>

<script type="text/javascript">
  var inspectorFloating = new YAHOO.widget.Panel("inspector-floating", {
        width: "100px", 
        draggable: false, 
        close: false, 
        constraintoviewport: true, 
        context:['example1','br','br']
      })
  inspectorFloating.render();
</script>


<h2>Minimised</h2>

<div id="example2" class="yui-cssreset yui-cssfonts yui-cssgrids yui-cssbase jshub inspector yui-skin-sam example-ui">
  <div id="inspector-minimised" class="state2" >
    <div class="hd">
<%= render 'container_header' %>   
    </div>
    <div class="bd">
<%= render 'status_large' %>
<%= render :partial => 'buttons', :locals => { :text => 'View Events' } %>
    </div>
    <div class="ft">
<%= render 'container_footer' %>   
    </div>
  </div>
</div>

<script type="text/javascript">
  var inspectorMinimised = new YAHOO.widget.Panel("inspector-minimised", {
        width: "225px",
        draggable: true, 
        close: true, 
        constraintoviewport: true
      })
  inspectorMinimised.render();
</script>


<h2>Maximised</h2>

<p>
<button id="setPanel1Title">Set Panel 1 Title</button>
<button id="setPanel2Title">Set Panel 2 Title</button>
<button id="addPanel1Event">Add an Event to Panel 1</button>
<button id="addPanel2Event">Add and Event to Panel 2</button>
</p>

<div id="example3" class="yui-cssreset yui-cssfonts yui-cssgrids yui-cssbase jshub inspector yui-skin-sam example-ui">

  <div id="inspector-maximised" class="state3" >
    <div class="hd">
<%= render 'container_header' %>   
    </div>
    <div class="bd">
<%= render 'status_small' %>
<%= render 'search' %>
      <ul id="event-list">
        <li>
          <div>Page (<span class="count">0</span>)</div>
          <div>
            <div id="event-section-0" class="event-section">
              <div class="bd">
<%# Different type of event list items %>
<%= render :partial => 'event_item', :locals => { 
      :id => 'event-1',
      :variable => 'Page-view-complete',
      :vendor => 'Google Analytics',
      :value => 'True'
    } %>
<%= render :partial => 'event_item', :locals => { 
      :id => 'event-2',
      :variable => 'Page-name',
      :value => 'Homepage',
      :warning => true,
      :warnings => {
          'Google Analytics' => 'Homepage',
          'Coremetrics' => 'Home1',
          'MF - hPage' => 'Homepage1'
        }
    } %>
<%= render :partial => 'event_item', :locals => { 
      :id => 'event-3',
      :variable => 'Page-category',
      :value => 'Electrics',
      :warning => true,
      :warnings => {
          'Google Analytics' => 'Electrics',
          'Coremetrics' => 'Homeware'
        }
    } %>    
<%= render :partial => 'event_item', :locals => { 
      :id => 'event-4',
      :variable => 'Page-ref',
      :vendor => 'Coremetrics',
      :value => '123'
    } %>

              </div><!-- close module bd -->
            </div><!-- close module -->
          </div>
        </li>
        <li>
          <div>User Interactions (<span class="count">0</span>)</div>
          <div>
            <div id="event-section-1" class="event-section">
              <div class="bd">

<%= render :partial => 'event_item', :locals => { 
      :id => 'event-5',
      :variable => 'Rollover reveal',
      :vendor => 'Coremetrics',
      :value => 'Prod123',
      :help_text => "<p>Coremetrics event.</p><p>Rollover reveal <br /> This refers to ... Aenean quis enim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec at justo.</p><p><a href='../docs/'>View documentation</a></p>"
    } %>
<%= render :partial => 'event_item', :locals => { 
      :id => 'event-6',
      :variable => 'DetailsClick',
      :vendor => 'Google Analytics',
      :value => '123',
      :help_text => "<p>Google Analytics event.</p><p>DetailsClick <br /> This refers to ... Aenean quis enim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec at justo.</p><p><a href='../docs/'>View documentation</a></p>"
    } %>
<%= render :partial => 'event_item', :locals => { 
      :id => 'event-7',
      :variable => 'DetailsClicked',
      :vendor => 'Coremetrics',
      :value => 'Prod123',
      :help_text => "<p>Coremetrics event.</p><p>DetailsClicked <br /> This refers to ... Aenean quis enim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec at justo.</p><p><a href='../docs/'>View documentation</a></p>"
    } %>

              </div><!-- close module bd -->
            </div><!-- close module -->
          </div>
        </li>

        <li>
          <h3>Product data (1)</h3>
          <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam sit amet neque a elit convallis ullamcorper. Proin fermentum iaculis elit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus quis enim quis neque convallis porta. Proin posuere convallis nunc. Aenean quis enim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec at justo. Cras odio metus, placerat ultricies, mollis ut, interdum ut, turpis. Aliquam vitae ligula vitae nunc vestibulum aliquet.</p>
        </li>
        <li>
          <h3>Shopping cart (1)</h3>
          <p>Maecenas mi quam, lobortis eu, feugiat ac, consequat eget, enim. Vivamus ac turpis a velit lacinia tempus. Vestibulum ac arcu. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fusce porttitor, ligula at cursus accumsan, metus enim gravida metus, id euismod turpis nibh vitae dolor. Sed magna orci, luctus ac, commodo id, malesuada vitae, lorem. Sed mattis metus. Integer vel massa.</p>
        </li>
        <li>
          <h3>Inline content updates (1)</h3>
          <p>Donec euismod gravida purus. Suspendisse dignissim velit id lectus. Nunc ultricies pede vel orci. Fusce commodo leo vitae mi. Quisque eleifend blandit quam. Quisque eu arcu sed dolor tincidunt fermentum. Pellentesque lorem erat, pulvinar eget, pellentesque nec, cursus at, risus. Phasellus enim purus, pulvinar eget, viverra at, congue id, massa. Cras ac quam feugiat nulla luctus dapibus.</p>
        </li>  
        <li>
          <h3>Data sources (1)</h3>
          <p>Donec euismod gravida purus. Suspendisse dignissim velit id lectus. Nunc ultricies pede vel orci. Fusce commodo leo vitae mi. Quisque eleifend blandit quam. Quisque eu arcu sed dolor tincidunt fermentum. Pellentesque lorem erat, pulvinar eget, pellentesque nec, cursus at, risus. Phasellus enim purus, pulvinar eget, viverra at, congue id, massa. Cras ac quam feugiat nulla luctus dapibus.</p>
        </li>  
      </ul>
<%= render :partial => 'buttons', :locals => { :text => 'Hide Events' } %>
    </div>
    <div class="ft">
<%= render 'container_footer' %>   
    </div>
  </div>
</div>

<style type="text/css" media="screen">  
  #inspector-maximised .bd ul#event-list {
    margin: 0;
  }
  #inspector-maximised .yui-resize-handle-br {
    right: 0;
    bottom: 0;
    height: 8px;
    width: 8px;
    position:absolute; 
  }  

  /* constrain the max height of an individual panel in the accordion so that content scrolls */
  #inspector-maximised .yui-accordion-content {
    min-height: 150px;
    max-height: 150px;
    overflow: auto;
  }
</style>

<script type="text/javascript">

  // init the Modules indie the Accordion Panels
  var eventSection0 = new YAHOO.widget.Module("event-section-0");
  var eventSection1 = new YAHOO.widget.Module("event-section-1");

  // init the accordion inside the panel body
  var eventList = new YAHOO.widget.AccordionView('event-list', {
        width: '100%', 
        collapsible: true,
        animate: false
      });
  
  // init the panel
  var inspectorMaximised = new YAHOO.widget.Panel("inspector-maximised", {
        width: "225px",
        height: "450px",
        draggable: true, 
        close: true,
        autofillheight: "body",
        constraintoviewport: true
      })
  inspectorMaximised.render();

  // add contextual tooltips for event specific help using the title attribute
  // TODO make this appear above the panel
  var eventListHelp = new YAHOO.widget.Tooltip("eventListHelp", { 
			  context: YAHOO.util.Dom.getElementsByClassName('help-text', 'div'),
        constraintoviewport: true,
			  width: "300px",
			  zindex: 1000
			});
  
  // Make the panel resizable and handle events and repainting ref: http://developer.yahoo.com/yui/examples/container/panel-resize.html
  // TODO account for open/closed accordion in recalculating the body height
  var inspectorMaximisedResize = new YAHOO.util.Resize('inspector-maximised', {
    handles: ['br'],
    autoRatio: false,
    minWidth: 225,
    minHeight: 450,
    status: false
  });
  inspectorMaximisedResize.on("startResize", function(args) {
    if (this.cfg.getProperty("constraintoviewport")) {
        var D = YAHOO.util.Dom;
        var clientRegion = D.getClientRegion();
        var elRegion = D.getRegion(this.element);
        inspectorMaximisedResize.set("maxWidth", clientRegion.right - elRegion.left - YAHOO.widget.Overlay.VIEWPORT_OFFSET);
        inspectorMaximisedResize.set("maxHeight", clientRegion.bottom - elRegion.top - YAHOO.widget.Overlay.VIEWPORT_OFFSET);
      } else {
        inspectorMaximisedResize.set("maxWidth", null);
        inspectorMaximisedResize.set("maxHeight", null);
    }
  }, inspectorMaximised, true);
  inspectorMaximisedResize.on("resize", function(args) {
    var panelHeight = args.height;
    this.cfg.setProperty("height", panelHeight + "px");
  }, inspectorMaximised, true);
</script>

<script type="text/javascript">
// example interaction API for adding events to a panel
function getNumberOfEventsByPanel(panelNumber) {
  var Dom = YAHOO.util.Dom;
  var allEvents = Dom.getElementsByClassName('event-item', 'div', 'event-section-'+panelNumber);
  return allEvents.length;
}

function setPanelCount(panelNumber, count) {
  var Dom = YAHOO.util.Dom;
  // we have a ref to the accordion from when we init it = eventList
  var panel = Dom.get(eventList.getPanel(panelNumber));
  Dom.batch(Dom.getElementsByClassName('count', 'span', panel), function(el){el.innerHTML = count});
}

function addPanelEvent(panelNumber) {
  var Dom = YAHOO.util.Dom;
  var newEvent = new YAHOO.widget.Module(Dom.generateId(), { visible: false});
  newEvent.cfg.queueProperty("visible", true);
  <%# uses Ruby partial to create a template string -%>
  newEvent.setBody('<%= render :partial => 'event_item.js.erb', :locals => { 
      :id => "'+Dom.generateId()+'",
      :variable => 'DynamicEvent',
      :vendor => 'Causata',
      :value => 'content112',
      :help_text => "<p>Causata event.</p><p>DynamicEvent <br /> This refers to ... Aenean quis enim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec at justo.</p><p><a href=\"../docs/\">View documentation</a></p>"
    } %>');
  // TODO this appends when really we want to prepend
  newEvent.render('event-section-'+panelNumber);
  console.log('New Event added to Panel'+panelNumber);
  // TODO is an changeBodyEvent raised on the parent module when we add this one? This can trigger the Panel title count update
  var count = getNumberOfEventsByPanel(panelNumber);
  setPanelCount(panelNumber, count);
  console.log(count+' Events now in Panel'+panelNumber);
}

// set the title text for each panel based on the number of events inside
function updatePanelTitles(accordion) {
  var Dom = YAHOO.util.Dom;
  var allPanels = accordion.getPanels();
  console.log(allPanels);
  for (var i = 0, j = allPanels.length; i < j; i++) {
      var count = getNumberOfEventsByPanel(i);
      console.log(count+' Events in Panel '+i);
      setPanelCount(i, count);
  }
}

updatePanelTitles(eventList);
YAHOO.util.Event.addListener("setPanel1Title", "click", function(){setPanelCount(0,4)} );
YAHOO.util.Event.addListener("setPanel2Title", "click", function(){setPanelCount(1,3)} );
YAHOO.util.Event.addListener("addPanel1Event", "click", function(){addPanelEvent(0)} );
YAHOO.util.Event.addListener("addPanel2Event", "click", function(){addPanelEvent(1)} );


</script>

</body>
</html>
